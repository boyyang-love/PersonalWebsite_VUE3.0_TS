{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { app, db, auth } from '@/db/index.ts'\r\nimport { IhomeState } from '@/typings';\r\n\r\n// 文件上传\r\nclass FileUp {\r\n    state: IhomeState;\r\n    constructor(state: IhomeState) {\r\n        this.state = state\r\n        this.__init__()\r\n    }\r\n\r\n    __init__() { //初始化操作获取背景图片以及当前数据_id,_id为后面更换背景用\r\n        const id = localStorage.getItem('BG')\r\n        db.collection('usersBg').where({ _id: id }).get().then((res: any) => {\r\n            if (res.data.length != 0) {\r\n                this.state.bg = res.data[0].tempFileURL\r\n                this.state.id = res.data[0]._id\r\n                this.state.fileID = res.data[0].fileID\r\n            } else {\r\n                return\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    fileUpdate(file: any) { //图片文件上传\r\n        app.uploadFile({\r\n            cloudPath: `bg/${file.name}`,\r\n            filePath: file,\r\n        }).then((res) => {\r\n            app.getTempFileURL({\r\n                fileList: [\r\n                    {\r\n                        fileID: res.fileID,\r\n                        maxAge: 6000\r\n                    }\r\n                ]\r\n            }).then((temp: any) => {\r\n                this.state.bg = temp.fileList[0].tempFileURL\r\n                db.collection('usersBg').add({\r\n                    downloadUrl: temp.fileList[0].download_url,\r\n                    fileID: temp.fileList[0].fileID,\r\n                    fileid: temp.fileList[0].fileid,\r\n                    tempFileURL: temp.fileList[0].tempFileURL\r\n                }).then((res: any) => {\r\n                    localStorage.setItem('BG', res.id)\r\n                })\r\n            })\r\n        })\r\n    }\r\n}\r\n// 登录注册\r\nclass Login {\r\n    // 登录\r\n    singin(email: string, password: string): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            db.collection('users').where({ email: email }).get().then((res) => {\r\n                if (res.data.length == 0) {\r\n                    resolve('不存在该用户,请注册')\r\n                } else {\r\n                    auth.signInWithEmailAndPassword(email, password).then(() => {\r\n                        resolve('登录成功')\r\n                    }).catch(() => {\r\n                        reject('账号或密码错误')\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n    // 注册\r\n    singup(email: string, password: string): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            db.collection('users').where({ email: email }).get().then((res) => {\r\n                if (res.data.length == 0) {\r\n                    auth.signUpWithEmailAndPassword(email, password).then(() => {\r\n                        db.collection('users').add({\r\n                            name: '',\r\n                            age: '',\r\n                            gender: '',\r\n                            email: email,\r\n                            backgroundImage: '',\r\n                            phoneNumber: '',\r\n                            qqNumber: '',\r\n                            wechat: ''\r\n                        }).then(() => {\r\n                            resolve('注册成功')\r\n                        })\r\n                    }).catch(() => {\r\n                        reject('注册失败')\r\n                    })\r\n                } else {\r\n                    resolve('该账号已经注册过')\r\n                }\r\n            })\r\n\r\n        })\r\n    }\r\n    // 注销\r\n    signout() {\r\n        return new Promise((resolve, reject) => {\r\n            auth.signOut().then(res => {\r\n                resolve(res)\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n    // 登录状态判断\r\n    isLogin(): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            auth.getLoginState().then((res: any) => {\r\n                resolve(res?.loginType)\r\n            }).catch(() => {\r\n                reject('未登录')\r\n            })\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// 获取背景图片\r\nclass Getbackground {\r\n    /**\r\n     * 获取用户上传的所有背景图片\r\n     */\r\n    getbg() {\r\n        return new Promise((resolve, reject) => {\r\n            db.collection('usersBg').get().then((res) => {\r\n                if (res) {\r\n                    resolve(res)\r\n                }\r\n            }).catch((err) => {\r\n                reject(err)\r\n            })\r\n        })\r\n\r\n    }\r\n    /**\r\n     * 图片下载\r\n     * @url [字符串]\r\n     * @return [promise<any>]\r\n     */\r\n    download(url: string): Promise<any> {\r\n        return new Promise((resolve, resject) => {\r\n            app.downloadFile({fileID: url}).then(res => {\r\n                resolve(res)\r\n            }).catch(err => {\r\n                resject(err)\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    FileUp,\r\n    Login,\r\n    Getbackground\r\n}"]}