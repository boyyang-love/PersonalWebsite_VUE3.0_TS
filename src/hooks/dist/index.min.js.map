{"version":3,"sources":["index.ts"],"names":["index_ts_1","require","FileUp","state","this","__init__","prototype","_this","id","localStorage","getItem","db","collection","where","_id","get","then","res","data","length","bg","tempFileURL","fileID","fileUpdate","file","app","uploadFile","cloudPath","name","filePath","getTempFileURL","fileList","maxAge","temp","add","downloadUrl","download_url","fileid","setItem","exports","Login","singin","email","password","Promise","resolve","reject","auth","signInWithEmailAndPassword","singup","signUpWithEmailAndPassword","age","gender","backgroundImage","phoneNumber","qqNumber","wechat","signout","signOut","err","isLogin","getLoginState","_a","loginType","Getbackground","getbg","download","url","resject","downloadFile"],"mappings":"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","file":"index.min.js","sourcesContent":["import { app, db, auth } from '@/db/index.ts'\r\nimport { IhomeState } from '@/typings';\r\n\r\n// 文件上传\r\nclass FileUp {\r\n    state: IhomeState;\r\n    constructor(state: IhomeState) {\r\n        this.state = state\r\n        this.__init__()\r\n    }\r\n\r\n    __init__() { //初始化操作获取背景图片以及当前数据_id,_id为后面更换背景用\r\n        const id = localStorage.getItem('BG')\r\n        db.collection('usersBg').where({ _id: id }).get().then((res: any) => {\r\n            if (res.data.length != 0) {\r\n                this.state.bg = res.data[0].tempFileURL\r\n                this.state.id = res.data[0]._id\r\n                this.state.fileID = res.data[0].fileID\r\n            } else {\r\n                return\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    fileUpdate(file: any) { //图片文件上传\r\n        app.uploadFile({\r\n            cloudPath: `bg/${file.name}`,\r\n            filePath: file,\r\n        }).then((res) => {\r\n            app.getTempFileURL({\r\n                fileList: [\r\n                    {\r\n                        fileID: res.fileID,\r\n                        maxAge: 6000\r\n                    }\r\n                ]\r\n            }).then((temp: any) => {\r\n                this.state.bg = temp.fileList[0].tempFileURL\r\n                db.collection('usersBg').add({\r\n                    downloadUrl: temp.fileList[0].download_url,\r\n                    fileID: temp.fileList[0].fileID,\r\n                    fileid: temp.fileList[0].fileid,\r\n                    tempFileURL: temp.fileList[0].tempFileURL\r\n                }).then((res: any) => {\r\n                    localStorage.setItem('BG', res.id)\r\n                })\r\n            })\r\n        })\r\n    }\r\n}\r\n// 登录注册\r\nclass Login {\r\n    // 登录\r\n    singin(email: string, password: string): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            db.collection('users').where({ email: email }).get().then((res) => {\r\n                if (res.data.length == 0) {\r\n                    resolve('不存在该用户,请注册')\r\n                } else {\r\n                    auth.signInWithEmailAndPassword(email, password).then(() => {\r\n                        resolve('登录成功')\r\n                    }).catch(() => {\r\n                        reject('账号或密码错误')\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n    // 注册\r\n    singup(email: string, password: string): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            db.collection('users').where({ email: email }).get().then((res) => {\r\n                if (res.data.length == 0) {\r\n                    auth.signUpWithEmailAndPassword(email, password).then(() => {\r\n                        db.collection('users').add({\r\n                            name: '',\r\n                            age: '',\r\n                            gender: '',\r\n                            email: email,\r\n                            backgroundImage: '',\r\n                            phoneNumber: '',\r\n                            qqNumber: '',\r\n                            wechat: ''\r\n                        }).then(() => {\r\n                            resolve('注册成功')\r\n                        })\r\n                    }).catch(() => {\r\n                        reject('注册失败')\r\n                    })\r\n                } else {\r\n                    resolve('该账号已经注册过')\r\n                }\r\n            })\r\n\r\n        })\r\n    }\r\n    // 注销\r\n    signout() {\r\n        return new Promise((resolve, reject) => {\r\n            auth.signOut().then(res => {\r\n                resolve(res)\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n    // 登录状态判断\r\n    isLogin(): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            auth.getLoginState().then((res: any) => {\r\n                resolve(res?.loginType)\r\n            }).catch(() => {\r\n                reject('未登录')\r\n            })\r\n        })\r\n\r\n    }\r\n}\r\n\r\n// 获取背景图片\r\nclass Getbackground {\r\n    /**\r\n     * 获取用户上传的所有背景图片\r\n     */\r\n    getbg() {\r\n        return new Promise((resolve, reject) => {\r\n            db.collection('usersBg').get().then((res) => {\r\n                if (res) {\r\n                    resolve(res)\r\n                }\r\n            }).catch((err) => {\r\n                reject(err)\r\n            })\r\n        })\r\n\r\n    }\r\n    /**\r\n     * 图片下载\r\n     * @url [字符串]\r\n     * @return [promise<any>]\r\n     */\r\n    download(url: string): Promise<any> {\r\n        return new Promise((resolve, resject) => {\r\n            app.downloadFile({fileID: url}).then(res => {\r\n                resolve(res)\r\n            }).catch(err => {\r\n                resject(err)\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    FileUp,\r\n    Login,\r\n    Getbackground\r\n}"]}